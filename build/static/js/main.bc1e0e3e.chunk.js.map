{"version":3,"sources":["components/Adresar.js","services/adresar.js","App.js","index.js"],"names":["Adresar","podaci","className","ImePrezime","Email","osnovniUrl","axios","get","noviObjekt","post","id","put","App","props","useState","postaviPodatke","unosImena","postaviIme","unosAdrese","postaviAdresu","ispisiSve","postaviIspis","ispisOsoba","postaviOsobe","flag","postaviFlag","Id","postaviId","useEffect","console","log","adresarServer","then","response","data","length","podaciZaIspis","filter","p","value","onChange","e","target","onClick","map","key","osoba","urediOsobu","find","uredivanje","onSubmit","preventDefault","nova","adresa","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc1e0e3e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Adresar = ({podaci}) => {\r\n    \r\n    return (\r\n        <li className=\"podaci\">\r\n            {podaci.ImePrezime}\r\n            {podaci.Email}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Adresar","import axios from 'axios'\r\nconst osnovniUrl = 'http://localhost:3001/api/poruke'\r\n \r\nconst dohvatiSve = () => {\r\n    return axios.get(osnovniUrl);\r\n}\r\n \r\nconst stvori = noviObjekt => {\r\n    return axios.post(osnovniUrl, noviObjekt)\r\n}\r\n \r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\r\n}\r\n\r\nexport default {dohvatiSve, stvori, osvjezi}","import React, { useState, useEffect } from 'react'\nimport Adresar from './components/Adresar'\nimport adresarServer from './services/adresar'\n\nconst App = (props) => {\n  const [podaci, postaviPodatke] = useState([])\n  const [unosImena, postaviIme] = useState(\"\")\n  const [unosAdrese, postaviAdresu] = useState(\"\")\n  const [ispisiSve, postaviIspis] = useState(true)\n  const [ispisOsoba, postaviOsobe] = useState(\"\")\n  const [flag, postaviFlag] = useState(false)\n  const [Id, postaviId] = useState(0)\n\n  useEffect( () => {\n      console.log(\"Effect hook\");\n      adresarServer\n      .dohvatiSve()\n      .then( (response) => {\n          console.log(\"Podaci učitani\");\n          postaviPodatke(response.data)\n      })\n  }, [])\n\n  console.log(\"Renderirano je\", podaci.length, \"objekata\")\n  const podaciZaIspis = ispisiSve ? podaci : podaci.filter(p => p.ImePrezime[0] === ispisOsoba)\n\n  const noviKorisnik = (e) => {\n    e.preventDefault()\n    console.log(\"Klik\", e.target);\n\n    const noviObjekt = {           \n        ImePrezime: unosImena,\n        Email: unosAdrese\n    }\n    if(!flag){\n      adresarServer\n      .stvori(noviObjekt)\n      .then( (response) => {\n        postaviPodatke(podaci.concat(response.data))\n        postaviIme('')\n        postaviAdresu('')    \n    })\n  }\n  else{\n    const osoba = podaci.find(p => p.id === Id)\n    const nova={\n      ...osoba,\n      ImePrezime:unosImena,\n      adresa:unosAdrese\n    }\n    adresarServer.osvjezi(Id, nova).then((response) => {\n      console.log(response);\n      postaviPodatke(podaci.map(p=> p.id !== Id ? p : response.data))\n      postaviIme('')\n      postaviAdresu('')\n      postaviFlag(false)\n\n    })\n  }}\n\n  const promjenaFiltera = (e) => {\n    console.log(e.target.value);\n    postaviOsobe(e.target.value)\n  }\n\n  const promjenaImena = (e) => {\n    console.log(e.target.value);\n    postaviIme(e.target.value)\n  }\n\n  const promjenaAdrese = (e) => {\n    console.log(e.target.value);\n    postaviAdresu(e.target.value)\n  }\n\n  const uredivanje = (id) => {\n    postaviFlag(true)\n    postaviId(id)\n    const osoba = podaci.find(p => p.id === id)\n    postaviIme(osoba.ImePrezime)\n    postaviAdresu(osoba.Email)\n  }\n\n  /* const brisiPoruku = (id) => {\n    porukeServer\n      .brisi(id)\n      .then(response => {\n        console.log(response);\n        postaviPodatke(podaci.filter(p => p.id !== id))\n      }) */\n\nreturn (\n    <div>\n      <h1>Adresar</h1>\n      <div>\n          <p>Filtriraj osobe</p>\n          <input value={ispisOsoba} onChange={promjenaFiltera} />\n          {<button onClick={() => postaviIspis(!ispisiSve)}>Prikaži</button>}\n      </div> \n      <ul>\n        {podaciZaIspis.map(p =>\n          <Adresar \n            key={p.id} \n            osoba={p} \n            urediOsobu = {() => uredivanje(p.id)}/>\n        )}\n      </ul>\n      <h2>Novi korisnik</h2>\n      <form onSubmit={noviKorisnik}>\n        <label>Ime i prezime: </label>\n        <input value={unosImena} onChange={promjenaImena} /><br></br>\n        <label>Email adresa: </label>\n        <input value={unosAdrese} onChange={promjenaAdrese} /><br></br>\n        <button type=\"submit\">Spremi</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root')) \n\n"],"sourceRoot":""}